name: Docker Publish

on:
  push:
    branches: ["main"]
    tags: ["*"]
  pull_request:
    branches: ["main"]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # Job to build the AMD64 image using your reusable workflow
  build-amd64:
    uses: ./.github/workflows/docker-build.yml
    with:
      platform: linux/amd64
      suffix: -amd64
    secrets:
      token: ${{ secrets.GITHUB_TOKEN }}

  # Job to build the ARM64 image
  build-arm64:
    runs-on: ubuntu-latest # Using QEMU is often easier than a native ARM runner
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch,suffix=-arm64
            type=ref,event=pr,suffix=-arm64
            type=ref,event=tag,suffix=-arm64
            type=semver,pattern={{version}},suffix=-arm64
            type=semver,pattern={{major}}.{{minor}},suffix=-arm64
            type=sha,suffix=-arm64
            type=raw,value=latest,suffix=-arm64
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  # This job runs ONLY after both builds succeed
  create-manifest:
    runs-on: ubuntu-latest
    needs: [build-amd64, build-arm64]
    # Only run on actual pushes, not on pull requests
    if: github.event_name != 'pull_request'
    permissions:
      contents: read
      packages: write
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      # This metadata step generates the BASE tags (without suffixes)
      - name: Extract metadata for manifest
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=ref,event=tag
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha
            type=raw,value=latest
      - name: Create and push manifest
        run: |
          # Loop through each of the base tags generated by the metadata action
          for tag in $(echo "${{ steps.meta.outputs.tags }}" | tr ',' '\n'); do
            echo "Creating manifest for tag: ${tag}"
            docker buildx imagetools create --tag "${tag}" \
              "${tag}-amd64" \
              "${tag}-arm64"
          done
