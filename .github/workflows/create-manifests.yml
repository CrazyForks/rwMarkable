create-manifests:
  runs-on: ubuntu-latest
  permissions:
    contents: read
    packages: write

  steps:
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to the Container registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Create manifest for specified tag
      run: |
        # The base tag provided by the user (e.g., "latest" or "v1.2.3")
        base_tag="${{ github.event.inputs.tag }}"

        # Construct the full image names
        image_base="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}"
        manifest_tag="${image_base}:${base_tag}"
        amd64_image="${image_base}:${base_tag}-amd64"
        arm64_image="${image_base}:${base_tag}-arm64"

        echo "Creating manifest for: ${manifest_tag}"
        echo "Source AMD64: ${amd64_image}"
        echo "Source ARM64: ${arm64_image}"

        # Check if both platform-specific images exist using the FULL image name
        if docker buildx imagetools inspect "${amd64_image}" >/dev/null 2>&1 && docker buildx imagetools inspect "${arm64_image}" >/dev/null 2>&1; then
          echo "✅ Both platform images exist, creating manifest..."
          docker buildx imagetools create --tag "${manifest_tag}" \
            "${amd64_image}" \
            "${arm64_image}"
          echo "✅ Manifest created successfully for ${manifest_tag}"
        else
          echo "❌ Cannot create manifest - one or both platform images are missing from the registry."
          # Provide clear feedback on which image is missing
          docker buildx imagetools inspect "${amd64_image}" >/dev/null 2>&1 || echo "  -> ARM64 image is MISSING."
          docker buildx imagetools inspect "${arm64_image}" >/dev/null 2>&1 || echo "  -> AMD64 image is MISSING."
          exit 1
        fi
